<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemies</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 4;
target = obj_player;
wall = obj_wall;
range = 96;
arcwidth = 24;
rotation = 1;
attackspeed = 20;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//attacking timer
/***DO NOT DELETE THIS EVENT***/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if point_in_triangle(target.x,target.y,x,y,x+lengthdir_x(range,image_angle-arcwidth),y+lengthdir_y(range,image_angle-arcwidth),x+lengthdir_x(range,image_angle+arcwidth),y+lengthdir_y(range,image_angle+arcwidth))
&amp;&amp; !collision_line(x,y,target.x,target.y,wall,1,1)
{
    image_angle = point_direction(x,y,target.x,target.y);
    if alarm[0] &lt; 0
    {
        //Bullet Variables
        var blt = instance_create(x,y,obj_bullet);
        blt.speed = 12;
        //make bullet aim at target...
        blt.direction = image_angle;
        blt.image_angle = blt.direction;
        alarm[0] = attackspeed;//reset timer for attacking
    }
}
else
{image_angle += rotation;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sight arc
draw_set_alpha(0.2);
draw_set_color(c_white);
draw_triangle(x,y,x+lengthdir_x(range,image_angle-arcwidth),y+lengthdir_y(range,image_angle-arcwidth),x+lengthdir_x(range,image_angle+arcwidth),y+lengthdir_y(range,image_angle+arcwidth),0);
draw_set_alpha(1);

//debug
draw_self();

if global.debug = true
{
    if point_in_triangle(target.x,target.y,x,y,x+lengthdir_x(range,image_angle-arcwidth),y+lengthdir_y(range,image_angle-arcwidth),x+lengthdir_x(range,image_angle+arcwidth),y+lengthdir_y(range,image_angle+arcwidth))
    {draw_set_color(c_lime);}
    else
    {draw_set_color(c_red);}//arc sight...
    draw_triangle(x,y,x+lengthdir_x(range,image_angle-arcwidth),y+lengthdir_y(range,image_angle-arcwidth),x+lengthdir_x(range,image_angle+arcwidth),y+lengthdir_y(range,image_angle+arcwidth),1);
    if !collision_line(x,y,target.x,target.y,wall,1,1)
    {draw_set_color(c_lime);}
    else
    {draw_set_color(c_red);}
    draw_line(x,y,target.x,target.y);//LOS
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
