<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemies</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_index = 1;
//****to assign an enemy to a flag refer to its room creation code
//each enemy and flag must have a corresponding eid****

//Customise:
attackspeed = 20;//set how many steps before the enemy can attack again
sight = 128;//set how far the enemy can see
range = 64;//set how far the enemy can attack from
target = obj_player;//set the target instance
wall = obj_wall;//set the wall object to check for
spd = 1.5;//set the speed

//DO NOT customise:
state = 0;//set the "state" of the enemy - roaming(0), attacking(1)
goto = true;//go to flag
origdir = 0;
alarm[0] = 1;
path = path_add();//Init path to get back to starting coordinates
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//attacking timer
/***DO NOT DELETE THIS EVENT***/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//finds the flag with the same eid as this enemy's eid
//then sets the eid to that specific flag's actual id
with obj_flag
{
    if eid = other.eid
    {other.eid = id;}
}
origdir = point_direction(x,y,eid.x,eid.y);//get the starting direction to the flag
direction = origdir;//set the starting direction
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//look where it's going
image_angle = direction;

if distance_to_object(target) &gt; sight || collision_line(x,y,target.x,target.y,wall,1,1)//if the target is outside of the enemy's line of sight...
{
    state = 0;
    speed = spd;
    if place_meeting(x,y,eid)//turn around once the flag is reached
    {
        direction += 180;
        goto = !goto;
    }
    if (x = xstart &amp;&amp; y = ystart) &amp;&amp; goto = false//turn around once the starting position is reached
    {
        direction += 180;
        goto = !goto;
    }
    //correct the direction after following an enemy...
    if goto = false &amp;&amp; direction != origdir+180
    {
        speed = 0;
        if mp_grid_path(global.grid,path,x,y,xstart,ystart,1)//go back to the starting position
        {path_start(path,spd,3,0);}
        if (x &gt; xstart-1 &amp;&amp; x &lt; xstart+1) &amp;&amp; (y &gt; ystart-1 &amp;&amp; y &lt; ystart+1)//once at the starting position, correct coordinates &amp; direction...
        {
            path_end();//stop following the path to get back to the player
            x = xstart;
            y = ystart;
            goto = true;
            direction = origdir;
        }
    }
}
else
{
    path_end();//stop following the path to get back to the player
    goto = false;
    if distance_to_object(target) &lt; range//if the target is within the enemy's range
    {
        speed = 0;//stop moving
        direction = point_direction(x,y,target.x,target.y);//look at the target
        state = 1;//start attacking
    }
    else//move towards the player...
    {
        state = 0;//roam
        speed = 0;//when using the below function we need to set the speed to 0
        mp_potential_step_object(target.x,target.y,spd,wall);
    }
}

if state = 1//if attacking
{
    if alarm[1] &lt; 0
    {
        var blt = instance_create(x,y,obj_bullet);
        blt.speed = 12;
        blt.direction = direction;
        blt.image_angle = blt.direction;
        alarm[1] = attackspeed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///debug
draw_self();
if global.debug = true
{
    draw_set_color(c_black);
    draw_set_halign(fa_center);
    //go to flag...
    draw_text(x,y-28,string(goto));
    draw_set_halign(fa_left);
    if !collision_line(x,y,target.x,target.y,wall,1,1)
    {draw_set_color(c_lime);}
    else
    {draw_set_color(c_red);}
    draw_line(x,y,target.x,target.y);//LOS
    if distance_to_object(target) &gt; sight
    {draw_set_color(c_red);}
    else
    {draw_set_color(c_lime);}
    draw_circle(x,y,sight+20,1);//sight
    if distance_to_object(target) &gt; range
    {draw_set_color(c_red);}
    else
    {draw_set_color(c_lime);}
    draw_circle(x,y,range+24,1);//range
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
