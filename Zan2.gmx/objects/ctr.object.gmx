<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.inv_select=0         //What item in the inventory the cursor is hovering over
global.debug=false
global.inv_holditem=false   //Whether we are holding an item or not
global.inv_holditemno=0     //The inventory number of the item we are holding

global.inv_optionshow=false //If we are looking at an item's options or not
global.inv_optionx=0        //x position of the options box
global.inv_optiony=0        //y position of the options box
global.inv_optionitemno=0   //ID of the selected item
global.inv_optionselect=0   //Selected option

var a;
for (a=0 a&lt;=40 a+=1) {
    global.inv_item[a,0]=0    //The item's ID
    global.inv_item[a,1]=0    //The item's quantity
}
roomprev=noone
itemtodrop=0
itemtodropAmount=0
global.level =1
global.expr=0;
global.maxexpr=10;
global.isdark=false
global.beento[0]=false
global.room_level=noone
global.beento[1]=false

global.maxhp = 100*global.level/2
global.hp = global.maxhp;
if global.hp&lt;=0
{game_restart()}
global.maxhp = global.hp;

global.mana=10;
global.maxmana=global.mana

global.spell= obj_spark
global.spell2= obj_spark
global.spellcost= 1;
global.spell2cost=1;



display_set_gui_size(360,360);


//Set up the global Ai grid for pathfinding
global.AI_grid=mp_grid_create(0,0,room_width/16,room_height/16,16,16);

//Add all instances of Parent object for collision checking
mp_grid_add_instances(global.AI_grid,obj_solid_parent,false);


//As the AI object uses the parent object for collisions,
//it has to be removed from the grid or no pathfinding can be done
with (obj_enemy_parent) mp_grid_clear_rectangle(global.AI_grid,x-8,y-8,x+8,y+8);

//Debug variable for changing the view
vc=false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//drop item after room is changed
if room=global.room_level
drop_item(lastselected)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.expr &gt;=global.maxexpr
{
global.level+=1
global.hp+=5
global.maxhp+=5
global.mana+=5
global.maxmana+=5
global.expr = global.expr-global.maxexpr
global.maxexpr= floor(global.maxexpr*sqrt(global.level))
}


instance_deactivate_object(obj_tree_base);
instance_deactivate_object(obj_tree_leaves);
instance_activate_region(view_xview[0] - 64, view_yview - 64, view_wview[0] + 128, view_hview + 128, true);

if room=room_spells
{

room_caption=string(floor((fps/room_speed)*100))+"%"
if (mouse_check_button(mb_left) &amp;&amp; global.inv_optionshow=0) {   //Check if we want to drag an item
    if (global.inv_holditem=false &amp;&amp; 30&gt;global.inv_select&gt;0) {
        global.inv_holditem=true
        global.inv_holditemno=global.inv_select
    }
}
if (!mouse_check_button(mb_left) &amp;&amp; global.inv_holditem=true &amp;&amp; global.inv_optionshow=0) {  //Puts down the dragged item if we release left mouse button.
    if (global.inv_select&gt;0) &amp;&amp; (global.inv_select&lt;30) {
        inventory_switch(global.inv_select,global.inv_holditemno)
    }
    global.inv_holditem=false
    global.inv_holditemno=0
}
if (mouse_check_button_pressed(mb_right) &amp;&amp; global.inv_holditem=false &amp;&amp; global.inv_select&gt;0 &amp;&amp; global.inv_optionshow=0 &amp;&amp; global.inv_item[global.inv_select,0]&gt;0) {    //Create option-box if we right click
    global.inv_optionshow=true
    global.inv_optionitemno=global.inv_item[global.inv_select,0]
    global.inv_optionx=mouse_x-view_xview
    global.inv_optiony=mouse_y-view_yview
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if room!=room_spells
{mp_grid_destroy(global.AI_grid)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if room!=room_spells or room!=rm_startscreen
{
///Init pathfinding grid
//****ONLY CALL THESE FUNCTIONS ONCE****
//****THESE FUNCTIONS MUST BE RUN BEFORE mp_grid_path() IS CALLED****
cellsize = 16;
global.grid = mp_grid_create(0,0,room_width/cellsize,room_height/cellsize,cellsize,cellsize);//split the room into a grid of cells. Each cell is 24x24 pixels
mp_grid_add_instances(global.grid,obj_solid_parent,false);//set any cells in the grid that hold a obj_wall instance as forbidden
}

if room=room_spells
{
    if instance_exists(ctr_light)
        {
        ctr_light.darkness=make_colour_rgb(0,0,0)
        }
}
if room=rm_world1 
{ 


if roomprev!=room_spells
{
  sound_stop_all();
sound_play(dark);
}

    if instance_exists(ctr_light)
        {
        ctr_light.darkness=make_colour_rgb(50,50,50)
        }
}
else if room=rm_world2

{
if roomprev!=room_spells
{
sound_stop_all()   
} 

if instance_exists(ctr_light)
        {
        ctr_light.darkness=make_colour_rgb(30,150,150)
        }}
        
else if room=rm_test

{
if roomprev!=room_spells
{
sound_stop_all()   
}         
        
}     
        
        
roomprev=room




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room=room_spells
{
draw_set_font(fnt001)
inventory_draw_infobox(view_xview+32,view_yview+284,-1,0.5,c_black)  //Draw the info box
inventory_draw(view_xview+192,view_yview+32,-1,0.8,c_black)           //Draw the inventory
if (global.inv_optionshow=1) {inventory_draw_optionbox(view_xview+global.inv_optionx,view_yview+global.inv_optiony,-1,0.75,c_black)}     //Draw the option box
} else global.inv_select=0
if (instance_exists(obj_player)) &amp;&amp; room!=room_spells {
draw_text_colour(8,display_get_gui_height()-48, "Level-"+ string(global.level)+ "    EXP:"+string(global.expr)+"/"+string(global.maxexpr),c_white,c_white,c_white,c_white,1)
if global.hp&gt;0{
draw_rectangle_color(8,display_get_gui_height()-28,8+(global.hp*100/global.maxhp),display_get_gui_height()-16,c_maroon,c_maroon,c_red,c_red,false)
}
draw_rectangle_color(8,display_get_gui_height()-28,108,display_get_gui_height()-16,c_white,c_white,c_white,c_white,true)

if global.mana &gt;0 {
draw_rectangle_color(8,display_get_gui_height()-12,8+(global.mana*100/global.maxmana),display_get_gui_height()-4,c_blue,c_blue,c_navy,c_blue,false)
}
draw_rectangle_color(8,display_get_gui_height()-12,108,display_get_gui_height()-4,c_white,c_white,c_white,c_white,true)



}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
draw_set_alpha(0.2)
mp_grid_draw(global.grid)
draw_set_alpha(1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="88">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room!=rm_startscreen
{
if (room != room_spells)
{
global.lastx=obj_player.x
global.lasty=obj_player.y

global.room_level=room;
room_persistent=true;
room_goto(room_spells);

}
else
{
room_goto(global.room_level);

global.inv_select=0   
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inventory_add(14,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.expr+=(global.expr*2)+1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="48">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.isdark=false
{
global.isdark=true
ctr_light.darkness=make_colour_rgb(0,0,0)
}




if global.isdark=true
{
    
    if instance_exists(ctr_light)
        {
        ctr_light.darkness=make_colour_rgb(0,0,0)
        }
    
    global.isdark=false

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="18">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if room!=room_last
{
room_persistent=true
if instance_exists(ctr_light)
with ctr_light
{

}
room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
if room!=room_first
{
room_persistent=true
if instance_exists(ctr_light)
with ctr_light
{

}
room_goto_previous();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
